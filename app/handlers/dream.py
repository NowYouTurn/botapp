from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from app.utils.typing_action import with_typing
from app.utils.credits import ensure_credit
from app.services.dream import interpret_dream
from app.models import User

router = Router()

WEEKDAYS = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
weekday_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=d, callback_data=f"dream_w:{idx}")]
        for idx, d in enumerate(WEEKDAYS)
    ]
)

# –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫—ç—à <user_id -> weekday>
_pending_weekday: dict[int, str] = {}


@router.message(F.text == "üåô –°–æ–Ω–Ω–∏–∫")
async def dream_entry(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –∫–æ–≥–¥–∞ –ø—Ä–∏—Å–Ω–∏–ª—Å—è —Å–æ–Ω:", reply_markup=weekday_kb)


@router.callback_query(F.data.startswith("dream_w:"))
async def dream_chosen_weekday(cb):
    idx = int(cb.data.split(":")[1])
    _pending_weekday[cb.from_user.id] = WEEKDAYS[idx]
    await cb.message.edit_text("–¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ —Å–æ–Ω –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.")


@router.message(lambda m: m.from_user.id in _pending_weekday)
@with_typing
async def dream_interpret(message: Message, db_user: User):
    weekday = _pending_weekday.pop(message.from_user.id)
    if not await ensure_credit(message, db_user):
        return
    answer = await interpret_dream(message.text, weekday)
    await message.answer(answer)
